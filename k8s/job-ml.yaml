apiVersion: batch/v1
kind: Job
metadata:
  name: tp2-ml-job  # Mude o nome a cada deploy para forçar recriação
  namespace: tassioalmeida
spec:
  # Após 3 falhas, para de tentar
  backoffLimit: 3
  # Remove o Job automaticamente após 1 hora de conclusão
  ttlSecondsAfterFinished: 3600
  template:
    spec:
      containers:
        - name: tp2-ml
          image: tassiolucas/tp2-ml:0.11
          imagePullPolicy: Always
          command: ["python3", "-u", "/app/train_model.py"]
          
          # Variáveis de ambiente para controlar o treinamento
          env:
            - name: DATA_PATH
              value: "/home/datasets/spotify/2023_spotify_ds1.csv"
            - name: OUTPUT_PATH
              value: "/data/model.pkl"
            - name: MAX_PLAYLISTS
              value: "999999999"  # Sem limite (processa tudo)
            - name: MIN_SUP_RATIO
              value: "0.05"  # 0.05=rápido, 0.02=balanceado, 0.01=lento
            - name: MIN_CONF
              value: "0.6"
          
          # Limites de recursos para evitar consumir todo o nó
          resources:
            requests:
              memory: "512Mi"
              cpu: "500m"
            limits:
              memory: "1536Mi"  # 1.5Gi (namespace limita em 2G)
              cpu: "2000m"
          
          volumeMounts:
            - name: spotify-dataset
              mountPath: /home/datasets/spotify
              readOnly: true  # Dataset é somente leitura
            - name: shared-data
              mountPath: /data
      
      volumes:
        - name: spotify-dataset
          hostPath:
            path: /home/datasets/spotify
            type: Directory
        - name: shared-data
          persistentVolumeClaim:
            claimName: project2-pvc-tassioalmeida
      
      restartPolicy: OnFailure  # Tenta novamente se falhar
